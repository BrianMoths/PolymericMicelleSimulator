/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Gui;

import Engine.PolymerSimulator;
import Engine.SimulationStepping.StepTypes.StepType;
import Engine.SystemAnalyzer;
import SystemAnalysis.GeometryAnalyzer.AreaPerimeter;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author bmoths
 */
public class AnalysisWindow extends javax.swing.JFrame {

    private class UpdaterRunnable implements Runnable {

        @Override
        public void run() {
            while (true) {
                updateDisplay();
                sleepUntilNextFrame();
            }
        }

        private void sleepUntilNextFrame() {
            try {
                Thread.sleep(100);
            } catch (InterruptedException ex) {
                Logger.getLogger(MicelleGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }

    private class UpdaterThread extends Thread {

        public UpdaterThread() {
            super(new UpdaterRunnable());
        }

    }

    private PolymerSimulator polymerSimulator;
    private SystemAnalyzer systemAnalyzer;
    private Thread updaterThread;
//    private SimulationHistory simulationHistory;

    /**
     * Creates new form AnalysisWindow
     */
    public AnalysisWindow(PolymerSimulator polymerSimulator) {
        initComponents();
        this.polymerSimulator = polymerSimulator;
        systemAnalyzer = polymerSimulator.getSystemAnalyzer();

        createCharts();
        initialize();
    }

    private void createCharts() {
        energyChart.displayNewChart("energy");
        areaChart.displayNewChart("area");
        perimeterChart.displayNewChart("perimeter");
    }

    private void initialize() {
        initializeIterationsStatistics();
    }

    private void initializeIterationsStatistics() {
        aggregateStatistics.setSimulatorForAggregate(polymerSimulator);
        singleBeadStatistics.setSimulatorAndStepType(polymerSimulator, StepType.SINGLE_BEAD);
        wallMoveStatistics.setSimulatorAndStepType(polymerSimulator, StepType.SINGLE_WALL_RESIZE);
        reptationStatistics.setSimulatorAndStepType(polymerSimulator, StepType.REPTATION);
    }

    public void setPolymerSimulator(PolymerSimulator polymerSimulator) {
        this.polymerSimulator = polymerSimulator;
        systemAnalyzer = polymerSimulator.getSystemAnalyzer();
    }

    public void updateDisplay() {
        updateIterationStatisticsDisplay();
        updatePhysicalPropertiesDisplay();
    }

    private void updateIterationStatisticsDisplay() {
        aggregateStatistics.updateValues();
        singleBeadStatistics.updateValues();
        wallMoveStatistics.updateValues();
        reptationStatistics.updateValues();
    }

    private void updatePhysicalPropertiesDisplay() {
        final AreaPerimeter areaPerimeter = systemAnalyzer.findAreaAndPerimeter();
        final double area = areaPerimeter.area;
        final double perimeter = areaPerimeter.perimeter;

        updateEnergyDisplay();
        updateAreaDisplay(area);
        updatePerimeterDisplay(perimeter);
    }

    //<editor-fold defaultstate="collapsed" desc="update phyical properties display">
    private void updateEnergyDisplay() {
        final double energy = polymerSimulator.getEnergy();

        energyLbl.setText(doubleToString(energy));
        energyChart.addValue((int) energy);
    }

    private void updateAreaDisplay(final double area) {
        areaLbl.setText(doubleToString(area));
        areaChart.addValue((int) area);
    }

    private void updatePerimeterDisplay(final double perimeter) {
        perimeterLbl.setText(doubleToString(perimeter));
        perimeterChart.addValue((int) perimeter);
    }
    //</editor-fold>

    private String doubleToString(double number) {
        return String.format("%.4f", number);
    }

//    private void addSnapshot(){
//        addEnergySnapshot();
//        addAreaSnapshot();
//        addPerimeterSnapshot();
//    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        volumeCaptionLbl = new javax.swing.JLabel();
        areaLbl = new javax.swing.JLabel();
        perimeterCaptionLbl = new javax.swing.JLabel();
        perimeterLbl = new javax.swing.JLabel();
        energyCaptionLbl = new javax.swing.JLabel();
        energyLbl = new javax.swing.JLabel();
        areaChart = new Gui.StripChart();
        perimeterChart = new Gui.StripChart();
        energyChart = new Gui.StripChart();
        aggregateStatistics = new Gui.AcceptanceStatistics();
        singleBeadStatistics = new Gui.AcceptanceStatistics();
        wallMoveStatistics = new Gui.AcceptanceStatistics();
        reptationStatistics = new Gui.AcceptanceStatistics();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Physical Properties"));

        volumeCaptionLbl.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        volumeCaptionLbl.setText("Area:");

        areaLbl.setText("0");
        areaLbl.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        perimeterCaptionLbl.setText("Perimeter:");

        perimeterLbl.setText("0");
        perimeterLbl.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        energyCaptionLbl.setText("Energy:");

        energyLbl.setText("1");
        energyLbl.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(areaChart, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(volumeCaptionLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(areaLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(perimeterChart, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(energyChart, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(energyCaptionLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(energyLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(perimeterCaptionLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(perimeterLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(energyChart, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(energyCaptionLbl)
                    .addComponent(energyLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(areaChart, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(volumeCaptionLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(areaLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(perimeterChart, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(perimeterCaptionLbl)
                    .addComponent(perimeterLbl))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(aggregateStatistics, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(wallMoveStatistics, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(singleBeadStatistics, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reptationStatistics, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aggregateStatistics, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(wallMoveStatistics, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(singleBeadStatistics, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reptationStatistics, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 3, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Gui.AcceptanceStatistics aggregateStatistics;
    private Gui.StripChart areaChart;
    private javax.swing.JLabel areaLbl;
    private javax.swing.JLabel energyCaptionLbl;
    private Gui.StripChart energyChart;
    private javax.swing.JLabel energyLbl;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel perimeterCaptionLbl;
    private Gui.StripChart perimeterChart;
    private javax.swing.JLabel perimeterLbl;
    private Gui.AcceptanceStatistics reptationStatistics;
    private Gui.AcceptanceStatistics singleBeadStatistics;
    private javax.swing.JLabel volumeCaptionLbl;
    private Gui.AcceptanceStatistics wallMoveStatistics;
    // End of variables declaration//GEN-END:variables
}
