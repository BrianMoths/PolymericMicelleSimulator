/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Gui;

import Engine.PhysicalConstants;
import Engine.PhysicalConstants.PhysicalConstantsBuilder;
import Engine.PolymerChain;
import Engine.PolymerCluster;
import Engine.PolymerSimulator;
import Engine.SimulationParameters;
import Engine.SystemGeometry.HardWallGeometry.HardWallGeometryBuilder;
import Engine.SystemGeometry.PeriodicGeometry.PeriodicGeometryBuilder;
import Engine.SystemGeometry.AbstractGeometry.GeometryBuilder;

/**
 *
 * @author bmoths
 */
public class SystemConfiguration extends javax.swing.JFrame { //broken, need to initialize simulation parameters

    private final MicelleGui gui;

    /**
     * Creates new form SystemConfiguration
     */
    public SystemConfiguration(MicelleGui gui) {
        initComponents();
        this.gui = gui;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        boundaryConditionBgp = new javax.swing.ButtonGroup();
        buildSystembtn = new javax.swing.JButton();
        simulationParametersPnl = new javax.swing.JPanel();
        geometryPanel = new javax.swing.JPanel();
        dimensionCaptionLbl = new javax.swing.JLabel();
        xMaxCaptionLbl = new javax.swing.JLabel();
        yMaxCaptionLbl = new javax.swing.JLabel();
        dimensionFld = new javax.swing.JTextField();
        xMaxFld = new javax.swing.JTextField();
        yMaxFld = new javax.swing.JTextField();
        boundaryConditionsCaptionLbl = new javax.swing.JLabel();
        hardWallRdo = new javax.swing.JRadioButton();
        periodicRdo = new javax.swing.JRadioButton();
        PolymerClusterPanel = new javax.swing.JPanel();
        numberOfChainsCaptionLbl = new javax.swing.JLabel();
        numberOfChainsFld = new javax.swing.JTextField();
        diblockRdo = new javax.swing.JRadioButton();
        numABeadsCaptionLbl = new javax.swing.JLabel();
        numABeadsFld = new javax.swing.JTextField();
        numBBeadsCaptionLbl = new javax.swing.JLabel();
        numBBeadsFld = new javax.swing.JTextField();
        concentrationCaptionLbl = new javax.swing.JLabel();
        concentrationFld = new javax.swing.JTextField();
        numRepeatsCaptionLbl = new javax.swing.JLabel();
        numRepeatsFld = new javax.swing.JTextField();
        physicalConstantsPanel = new javax.swing.JPanel();
        temperatureCaptionLbl = new javax.swing.JLabel();
        temperatureFld = new javax.swing.JTextField();
        AACoefficientCaptionLbl = new javax.swing.JLabel();
        AAOverlapCoefficientFld = new javax.swing.JTextField();
        ABCoefficientCaptionLbl = new javax.swing.JLabel();
        ABOverlapCoefficientFld = new javax.swing.JTextField();
        springConstantCaptionLbl = new javax.swing.JLabel();
        springConstantFld = new javax.swing.JTextField();
        BBCoeffCaptionLbl = new javax.swing.JLabel();
        BBOverlapCoefficientFld = new javax.swing.JTextField();
        defaultParametersPnl = new javax.swing.JPanel();
        lamellaeBtn = new javax.swing.JButton();
        disorderBtn = new javax.swing.JButton();
        micelleBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Simulator Configuration");

        buildSystembtn.setText("Build System");
        buildSystembtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buildSystembtnActionPerformed(evt);
            }
        });

        simulationParametersPnl.setBorder(javax.swing.BorderFactory.createTitledBorder("Simulation Parameters"));

        geometryPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("System Geometry"));

        dimensionCaptionLbl.setText("Dimension:");

        xMaxCaptionLbl.setText("Width in X:");

        yMaxCaptionLbl.setText("Width in Y:");

        dimensionFld.setEditable(false);
        dimensionFld.setText("2");

        xMaxFld.setText("20");
        xMaxFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xMaxFldActionPerformed(evt);
            }
        });

        yMaxFld.setEditable(false);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, xMaxFld, org.jdesktop.beansbinding.ELProperty.create("${text}"), yMaxFld, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        boundaryConditionsCaptionLbl.setText("Boundary Conditions:");

        boundaryConditionBgp.add(hardWallRdo);
        hardWallRdo.setText("Hard Wall");

        boundaryConditionBgp.add(periodicRdo);
        periodicRdo.setSelected(true);
        periodicRdo.setText("Periodic");

        javax.swing.GroupLayout geometryPanelLayout = new javax.swing.GroupLayout(geometryPanel);
        geometryPanel.setLayout(geometryPanelLayout);
        geometryPanelLayout.setHorizontalGroup(
            geometryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, geometryPanelLayout.createSequentialGroup()
                .addGroup(geometryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(yMaxCaptionLbl)
                    .addComponent(xMaxCaptionLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(geometryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(xMaxFld)
                    .addComponent(yMaxFld)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, geometryPanelLayout.createSequentialGroup()
                .addComponent(dimensionCaptionLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dimensionFld))
            .addGroup(geometryPanelLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(geometryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(geometryPanelLayout.createSequentialGroup()
                        .addComponent(boundaryConditionsCaptionLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(geometryPanelLayout.createSequentialGroup()
                        .addComponent(periodicRdo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addComponent(hardWallRdo)
                        .addGap(22, 22, 22))))
        );
        geometryPanelLayout.setVerticalGroup(
            geometryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(geometryPanelLayout.createSequentialGroup()
                .addGroup(geometryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dimensionCaptionLbl)
                    .addComponent(dimensionFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(geometryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(xMaxCaptionLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xMaxFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(geometryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yMaxCaptionLbl)
                    .addComponent(yMaxFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boundaryConditionsCaptionLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(geometryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hardWallRdo)
                    .addComponent(periodicRdo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PolymerClusterPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Polymer Description"));

        numberOfChainsCaptionLbl.setText("Number of Chains:");

        numberOfChainsFld.setText("10");

        diblockRdo.setSelected(true);
        diblockRdo.setText("(AB)^n Block Copolymer");

        numABeadsCaptionLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        numABeadsCaptionLbl.setLabelFor(numABeadsFld);
        numABeadsCaptionLbl.setText("Number of A Beads:");

        numABeadsFld.setText("10");

        numBBeadsCaptionLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        numBBeadsCaptionLbl.setText("Number of B Beads:");

        numBBeadsFld.setText("10");
        numBBeadsFld.setToolTipText("");

        concentrationCaptionLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        concentrationCaptionLbl.setText("Concentration:");

        concentrationFld.setText("1");

        numRepeatsCaptionLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        numRepeatsCaptionLbl.setText("Number of repeats 'n':");

        numRepeatsFld.setText("1");

        javax.swing.GroupLayout PolymerClusterPanelLayout = new javax.swing.GroupLayout(PolymerClusterPanel);
        PolymerClusterPanel.setLayout(PolymerClusterPanelLayout);
        PolymerClusterPanelLayout.setHorizontalGroup(
            PolymerClusterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PolymerClusterPanelLayout.createSequentialGroup()
                .addGroup(PolymerClusterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PolymerClusterPanelLayout.createSequentialGroup()
                        .addComponent(numberOfChainsCaptionLbl)
                        .addGap(2, 2, 2)
                        .addComponent(numberOfChainsFld))
                    .addGroup(PolymerClusterPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(PolymerClusterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PolymerClusterPanelLayout.createSequentialGroup()
                                .addComponent(diblockRdo)
                                .addGap(0, 65, Short.MAX_VALUE))
                            .addGroup(PolymerClusterPanelLayout.createSequentialGroup()
                                .addGroup(PolymerClusterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(numRepeatsCaptionLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(numBBeadsCaptionLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(numABeadsCaptionLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(PolymerClusterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(numBBeadsFld, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                                    .addComponent(numABeadsFld, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(numRepeatsFld)))))
                    .addGroup(PolymerClusterPanelLayout.createSequentialGroup()
                        .addComponent(concentrationCaptionLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(concentrationFld)))
                .addContainerGap())
        );
        PolymerClusterPanelLayout.setVerticalGroup(
            PolymerClusterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PolymerClusterPanelLayout.createSequentialGroup()
                .addGroup(PolymerClusterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberOfChainsCaptionLbl)
                    .addComponent(numberOfChainsFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(diblockRdo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PolymerClusterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numABeadsCaptionLbl)
                    .addComponent(numABeadsFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PolymerClusterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numBBeadsCaptionLbl)
                    .addComponent(numBBeadsFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PolymerClusterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numRepeatsCaptionLbl)
                    .addComponent(numRepeatsFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(PolymerClusterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(concentrationCaptionLbl)
                    .addComponent(concentrationFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        physicalConstantsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Physical Constants"));

        temperatureCaptionLbl.setText("Temperature:");

        temperatureFld.setText("400");
        temperatureFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                temperatureFldActionPerformed(evt);
            }
        });

        AACoefficientCaptionLbl.setText("AACoeff.:");

        AAOverlapCoefficientFld.setText("1");

        ABCoefficientCaptionLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ABCoefficientCaptionLbl.setText("AB Coeff.:");

        ABOverlapCoefficientFld.setText("4");

        springConstantCaptionLbl.setText("Spring Const:");

        springConstantFld.setText("40");
        springConstantFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                springConstantFldActionPerformed(evt);
            }
        });

        BBCoeffCaptionLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        BBCoeffCaptionLbl.setText("BB Coeff.:");

        BBOverlapCoefficientFld.setText("1");

        javax.swing.GroupLayout physicalConstantsPanelLayout = new javax.swing.GroupLayout(physicalConstantsPanel);
        physicalConstantsPanel.setLayout(physicalConstantsPanelLayout);
        physicalConstantsPanelLayout.setHorizontalGroup(
            physicalConstantsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(physicalConstantsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(physicalConstantsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BBCoeffCaptionLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(springConstantCaptionLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ABCoefficientCaptionLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AACoefficientCaptionLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(temperatureCaptionLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(physicalConstantsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(temperatureFld, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                    .addComponent(AAOverlapCoefficientFld)
                    .addComponent(ABOverlapCoefficientFld)
                    .addComponent(springConstantFld)
                    .addComponent(BBOverlapCoefficientFld))
                .addContainerGap())
        );
        physicalConstantsPanelLayout.setVerticalGroup(
            physicalConstantsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(physicalConstantsPanelLayout.createSequentialGroup()
                .addGroup(physicalConstantsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(temperatureCaptionLbl)
                    .addComponent(temperatureFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(physicalConstantsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AACoefficientCaptionLbl)
                    .addComponent(AAOverlapCoefficientFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(physicalConstantsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BBCoeffCaptionLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BBOverlapCoefficientFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(physicalConstantsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ABCoefficientCaptionLbl)
                    .addComponent(ABOverlapCoefficientFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(physicalConstantsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(springConstantCaptionLbl)
                    .addComponent(springConstantFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout simulationParametersPnlLayout = new javax.swing.GroupLayout(simulationParametersPnl);
        simulationParametersPnl.setLayout(simulationParametersPnlLayout);
        simulationParametersPnlLayout.setHorizontalGroup(
            simulationParametersPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(simulationParametersPnlLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(geometryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PolymerClusterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(physicalConstantsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        simulationParametersPnlLayout.setVerticalGroup(
            simulationParametersPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PolymerClusterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(geometryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(physicalConstantsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        defaultParametersPnl.setBorder(javax.swing.BorderFactory.createTitledBorder("Default Parameters"));

        lamellaeBtn.setText("Parameters to form lamellae");
        lamellaeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lamellaeBtnActionPerformed(evt);
            }
        });

        disorderBtn.setText("Parameters for disorder");
        disorderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disorderBtnActionPerformed(evt);
            }
        });

        micelleBtn.setText("Parameters for micelles");
        micelleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                micelleBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout defaultParametersPnlLayout = new javax.swing.GroupLayout(defaultParametersPnl);
        defaultParametersPnl.setLayout(defaultParametersPnlLayout);
        defaultParametersPnlLayout.setHorizontalGroup(
            defaultParametersPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(defaultParametersPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(defaultParametersPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lamellaeBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(disorderBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(micelleBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        defaultParametersPnlLayout.setVerticalGroup(
            defaultParametersPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(defaultParametersPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lamellaeBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(disorderBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(micelleBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(defaultParametersPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buildSystembtn, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(simulationParametersPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(simulationParametersPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buildSystembtn, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 31, Short.MAX_VALUE))
                    .addComponent(defaultParametersPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void xMaxFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xMaxFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_xMaxFldActionPerformed

    private void temperatureFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_temperatureFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_temperatureFldActionPerformed

    private void springConstantFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_springConstantFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_springConstantFldActionPerformed

    private void buildSystembtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buildSystembtnActionPerformed
        GeometryBuilder systemGeometryBuilder = new PeriodicGeometryBuilder();
        PhysicalConstantsBuilder physicalConstantsBuilder = new PhysicalConstantsBuilder();
        SimulationParameters simulationParameters;

        int dimension, numChains, numABeadsPerChain, numBBeadsPerChain, numRepeats;
        double xMax = 0, yMax = 0, zMax = 0;
        double temperature, AAOverlapCoefficient, BBOverlapCoefficient,
                ABOverlapCoefficient, springConstant, concentration;

        try {
            final String dimensionString = dimensionFld.getText();
            dimension = Integer.parseInt(dimensionString);
        } catch (NumberFormatException e) {
            System.err.println("couldn't parse dimension");
            return;
        }

        try {
            final String xMaxString = xMaxFld.getText();
            xMax = Double.parseDouble(xMaxString);
        } catch (NumberFormatException e) {
            System.err.println("couldn't parse xMax");
            return;
        }

        try {
            final String yMaxString = yMaxFld.getText();
            yMax = Double.parseDouble(yMaxString);
        } catch (NumberFormatException e) {
            System.err.println("couldn't parse yMax");
            return;
        }

        try {
            final String temperatureString = temperatureFld.getText();
            temperature = Double.parseDouble(temperatureString);
        } catch (NumberFormatException e) {
            System.err.println("couldn't parse temperature");
            return;
        }

        try {
            final String AAOverlapCoefficientString = AAOverlapCoefficientFld.getText();
            AAOverlapCoefficient = Double.parseDouble(AAOverlapCoefficientString);
        } catch (NumberFormatException e) {
            System.err.println("couldn't parse similarOverlapCoefficient");
            return;
        }
        try {
            final String BBOverlapCoefficientString = BBOverlapCoefficientFld.getText();
            BBOverlapCoefficient = Double.parseDouble(BBOverlapCoefficientString);
        } catch (NumberFormatException e) {
            System.err.println("couldn't parse similarOverlapCoefficient");
            return;
        }

        try {
            final String ABOverlapCoefficientString = ABOverlapCoefficientFld.getText();
            ABOverlapCoefficient = Double.parseDouble(ABOverlapCoefficientString);
        } catch (NumberFormatException e) {
            System.err.println("couldn't parse differentOverlapCoefficient");
            return;
        }

        try {
            final String springConstantString = springConstantFld.getText();
            springConstant = Double.parseDouble(springConstantString);
        } catch (NumberFormatException e) {
            System.err.println("couldn't parse spring constant");
            return;
        }

        try {
            final String numChainsString = numberOfChainsFld.getText();
            numChains = Integer.parseInt(numChainsString);
        } catch (NumberFormatException e) {
            System.err.println("couldn't parse number of Chains");
            return;
        }

        try {
            final String numABeadsString = numABeadsFld.getText();
            numABeadsPerChain = Integer.parseInt(numABeadsString);
        } catch (NumberFormatException e) {
            System.err.println("couldn't parse number of A Beads");
            return;
        }

        try {
            final String numBBeadsString = numBBeadsFld.getText();
            numBBeadsPerChain = Integer.parseInt(numBBeadsString);
        } catch (NumberFormatException e) {
            System.err.println("couldn't parse number of B Beads.");
            return;
        }

        try {
            final String numRepeatsString = numRepeatsFld.getText();
            numRepeats = Integer.parseInt(numRepeatsString);
        } catch (NumberFormatException e) {
            System.err.println("couldn't parse number of repeats.");
            return;
        }

        try {
            final String concentrationString = concentrationFld.getText();
            concentration = Double.parseDouble(concentrationString);
        } catch (NumberFormatException e) {
            System.err.println("couldn't concentration.");
            return;
        }

        if (dimension < 1) {
            System.err.println("dimension must be greater than 0.");
            return;
        }

        if (numChains < 1) {
            System.err.println("must have at least one chain.");
            return;
        }

        if (numRepeats < 1) {
            System.err.println("number of repeats must be positive.");
        }

        if (numABeadsPerChain < 0) {
            System.err.println("number of A Beads must be non-negative.");
            return;
        }

        if (numBBeadsPerChain < 0) {
            System.err.println("number of B Beads must be non-negative.");
            return;
        }

        if (numABeadsPerChain + numBBeadsPerChain < 1) {
            System.err.println("There must be at least one bead per chain.");
        }

        if (concentration <= 0) {
            System.err.println("Concentration must have a positive value");
        }

        if (periodicRdo.isSelected()) {
            systemGeometryBuilder = new PeriodicGeometryBuilder();
        } else if (hardWallRdo.isSelected()) {
            systemGeometryBuilder = new HardWallGeometryBuilder();
        }

        physicalConstantsBuilder.setTemperature(temperature);
        physicalConstantsBuilder.setAAOverlapCoefficient(AAOverlapCoefficient);
        physicalConstantsBuilder.setBBOverlapCoefficient(BBOverlapCoefficient);
        physicalConstantsBuilder.setABOverlapCoefficient(ABOverlapCoefficient);
        physicalConstantsBuilder.setSpringCoefficient(springConstant);

        PhysicalConstants physicalConstants = physicalConstantsBuilder.buildPhysicalConstants();

        PolymerChain polymerChain = PolymerChain.makeChainStartingWithA(numABeadsPerChain, numBBeadsPerChain);
        for (int i = 1; i < numRepeats; i++) {
            polymerChain.addBeads(true, numABeadsPerChain);
            polymerChain.addBeads(false, numBBeadsPerChain);
        }
        PolymerCluster polymerCluster = PolymerCluster.makeRepeatedChainCluster(polymerChain, numChains);
        polymerCluster.setConcentrationInWater(concentration);

        simulationParameters = PolymerSimulator.makeDefaultParameters(polymerCluster, xMax, dimension, physicalConstants);

        systemGeometryBuilder.setDimension(dimension);
        systemGeometryBuilder.setDimensionSize(0, xMax);
        systemGeometryBuilder.setDimensionSize(1, yMax);
        systemGeometryBuilder.setDimensionSize(2, zMax);
        systemGeometryBuilder.setParameters(simulationParameters);

        PolymerSimulator polymerSystem;
        polymerSystem = new PolymerSimulator(
                systemGeometryBuilder.buildGeometry(),
                polymerCluster,
                physicalConstants);

        gui.setSystem(polymerSystem);
    }//GEN-LAST:event_buildSystembtnActionPerformed

    private void lamellaeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lamellaeBtnActionPerformed
        dimensionFld.setText("2");
        xMaxFld.setText("20");
        yMaxFld.setText("20");
        periodicRdo.setSelected(true);
        temperatureFld.setText("350");
        AAOverlapCoefficientFld.setText("1");
        BBOverlapCoefficientFld.setText("1");
        ABOverlapCoefficientFld.setText("15");
        springConstantFld.setText("100");
        numberOfChainsFld.setText("300");
        numABeadsFld.setText("3");
        numBBeadsFld.setText("3");
        numRepeatsFld.setText("1");
        concentrationFld.setText("1");
    }//GEN-LAST:event_lamellaeBtnActionPerformed

    private void disorderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disorderBtnActionPerformed
        dimensionFld.setText("2");
        xMaxFld.setText("20");
        yMaxFld.setText("20");
        periodicRdo.setSelected(true);
        temperatureFld.setText("1000");
        AAOverlapCoefficientFld.setText("1");
        BBOverlapCoefficientFld.setText("1");
        ABOverlapCoefficientFld.setText("15");
        springConstantFld.setText("100");
        numberOfChainsFld.setText("300");
        numABeadsFld.setText("3");
        numBBeadsFld.setText("3");
        numRepeatsFld.setText("1");
        concentrationFld.setText("1");
    }//GEN-LAST:event_disorderBtnActionPerformed

    private void micelleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_micelleBtnActionPerformed
        dimensionFld.setText("2");
        xMaxFld.setText("20");
        yMaxFld.setText("20");
        periodicRdo.setSelected(true);
        temperatureFld.setText("40");
        AAOverlapCoefficientFld.setText("5");
        BBOverlapCoefficientFld.setText("-20");
        ABOverlapCoefficientFld.setText("20");
        springConstantFld.setText("200");
        numberOfChainsFld.setText("5");
        numABeadsFld.setText("3");
        numBBeadsFld.setText("3");
        numRepeatsFld.setText("7");
        concentrationFld.setText(".02");
    }//GEN-LAST:event_micelleBtnActionPerformed
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(SystemConfiguration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(SystemConfiguration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(SystemConfiguration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(SystemConfiguration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new SystemConfiguration().setVisible(true);
//            }
//        });
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AACoefficientCaptionLbl;
    private javax.swing.JTextField AAOverlapCoefficientFld;
    private javax.swing.JLabel ABCoefficientCaptionLbl;
    private javax.swing.JTextField ABOverlapCoefficientFld;
    private javax.swing.JLabel BBCoeffCaptionLbl;
    private javax.swing.JTextField BBOverlapCoefficientFld;
    private javax.swing.JPanel PolymerClusterPanel;
    private javax.swing.ButtonGroup boundaryConditionBgp;
    private javax.swing.JLabel boundaryConditionsCaptionLbl;
    private javax.swing.JButton buildSystembtn;
    private javax.swing.JLabel concentrationCaptionLbl;
    private javax.swing.JTextField concentrationFld;
    private javax.swing.JPanel defaultParametersPnl;
    private javax.swing.JRadioButton diblockRdo;
    private javax.swing.JLabel dimensionCaptionLbl;
    private javax.swing.JTextField dimensionFld;
    private javax.swing.JButton disorderBtn;
    private javax.swing.JPanel geometryPanel;
    private javax.swing.JRadioButton hardWallRdo;
    private javax.swing.JButton lamellaeBtn;
    private javax.swing.JButton micelleBtn;
    private javax.swing.JLabel numABeadsCaptionLbl;
    private javax.swing.JTextField numABeadsFld;
    private javax.swing.JLabel numBBeadsCaptionLbl;
    private javax.swing.JTextField numBBeadsFld;
    private javax.swing.JLabel numRepeatsCaptionLbl;
    private javax.swing.JTextField numRepeatsFld;
    private javax.swing.JLabel numberOfChainsCaptionLbl;
    private javax.swing.JTextField numberOfChainsFld;
    private javax.swing.JRadioButton periodicRdo;
    private javax.swing.JPanel physicalConstantsPanel;
    private javax.swing.JPanel simulationParametersPnl;
    private javax.swing.JLabel springConstantCaptionLbl;
    private javax.swing.JTextField springConstantFld;
    private javax.swing.JLabel temperatureCaptionLbl;
    private javax.swing.JTextField temperatureFld;
    private javax.swing.JLabel xMaxCaptionLbl;
    private javax.swing.JTextField xMaxFld;
    private javax.swing.JLabel yMaxCaptionLbl;
    private javax.swing.JTextField yMaxFld;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
