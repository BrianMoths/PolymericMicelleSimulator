/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Gui.analysiswindow;

import Engine.PolymerSimulator;
import Engine.SimulationStepping.StepTypes.StepType;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;

/**
 *
 * @author bmoths
 */
public class AcceptanceStatistics extends javax.swing.JPanel {

    private PolymerSimulator polymerSimulator;
    private StepType stepType;
    private boolean isAggregate = true;

    /**
     * Creates new form AcceptanceStatistics
     */
    public AcceptanceStatistics() {
        initComponents();
    }

    public void updateValues() {
        if (isAggregate) {
            updateAggrgateValues();
        } else {
            updateStepTypeValues();
        }
    }

    private void updateAggrgateValues() {
        final int attempted = polymerSimulator.getIterationNumber();
        final int accepted = polymerSimulator.getAcceptedIterations();
        outputValues(attempted, accepted);
    }

    private void updateStepTypeValues() {
        final int attempted = polymerSimulator.getAttemptedStepsOfType(stepType);
        final int accepted = polymerSimulator.getAcceptedStepsOfType(stepType);
        outputValues(attempted, accepted);
    }

    private void outputValues(final int attempted, final int accepted) {
        final double rate = (double) accepted / attempted;
        chainMovesLbl.setText(Integer.toString(attempted));
        acceptChainMovesLbl.setText(Integer.toString(accepted));
        chainMoveAcceptanceRateLbl.setText(Double.toString(rate));
    }

    public void setSimulatorAndStepType(PolymerSimulator polymerSimulator, StepType stepType) {
        isAggregate = false;
        setPolymerSimulator(polymerSimulator);
        setStepType(stepType);
    }

    //<editor-fold defaultstate="collapsed" desc="setSimulatorAndStepType helpers">
    private void setStepType(StepType stepType) {
        this.stepType = stepType;
        updateStepTypeLabels();
    }

    private void updateStepTypeLabels() {
        setTitle(stepType.getName() + " move statistics");
        chainMovesCaptionLbl.setText("Number of " + stepType.getName() + " moves");
        acceptedChainMovesCaptionLbl.setText("Accepted " + stepType.getName() + " moves");
    }
    //</editor-fold>

    public void setSimulatorForAggregate(PolymerSimulator polymerSimulator) {
        isAggregate = true;
        setPolymerSimulator(polymerSimulator);
        updateAggregateLabels();
    }

    //<editor-fold defaultstate="collapsed" desc="setSimulatorForAggregate helpers">
    private void updateAggregateLabels() {
        setTitle("Aggregate Statistics");
        chainMovesCaptionLbl.setText("Total number of moves");
        acceptedChainMovesCaptionLbl.setText("Accepted moves");
    }
    //</editor-fold>

    private void setPolymerSimulator(PolymerSimulator polymerSimulator) {
        this.polymerSimulator = polymerSimulator;
    }

    private void setTitle(String title) {
        final Border border = getBorder();
        final TitledBorder titledBorder = (TitledBorder) border;
        titledBorder.setTitle(title);
    }

    public PolymerSimulator getPolymerSimulator() {
        return polymerSimulator;
    }

    public StepType getStepType() {
        return stepType;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chainMovesCaptionLbl = new javax.swing.JLabel();
        chainMovesLbl = new javax.swing.JLabel();
        acceptedChainMovesCaptionLbl = new javax.swing.JLabel();
        acceptChainMovesLbl = new javax.swing.JLabel();
        chainMoveAcceptanceRateLbl = new javax.swing.JLabel();
        chainMoveAcceptanceRateCaptionLbl = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Title"));

        chainMovesCaptionLbl.setText("Number of Chain Moves:");

        chainMovesLbl.setText("0");
        chainMovesLbl.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        acceptedChainMovesCaptionLbl.setText("Accepted Chain Moves:");

        acceptChainMovesLbl.setText("0");
        acceptChainMovesLbl.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        chainMoveAcceptanceRateLbl.setText("0");
        chainMoveAcceptanceRateLbl.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        chainMoveAcceptanceRateCaptionLbl.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        chainMoveAcceptanceRateCaptionLbl.setText("Acceptance Rate:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(chainMoveAcceptanceRateCaptionLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chainMovesCaptionLbl)
                    .addComponent(acceptedChainMovesCaptionLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(acceptChainMovesLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chainMoveAcceptanceRateLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chainMovesLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chainMovesCaptionLbl)
                    .addComponent(chainMovesLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acceptedChainMovesCaptionLbl)
                    .addComponent(acceptChainMovesLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chainMoveAcceptanceRateCaptionLbl)
                    .addComponent(chainMoveAcceptanceRateLbl)))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel acceptChainMovesLbl;
    private javax.swing.JLabel acceptedChainMovesCaptionLbl;
    private javax.swing.JLabel chainMoveAcceptanceRateCaptionLbl;
    private javax.swing.JLabel chainMoveAcceptanceRateLbl;
    private javax.swing.JLabel chainMovesCaptionLbl;
    private javax.swing.JLabel chainMovesLbl;
    // End of variables declaration//GEN-END:variables
}
